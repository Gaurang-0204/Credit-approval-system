# Generated by Django 5.2.6 on 2025-09-25 13:33

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('customer_id', models.AutoField(primary_key=True, serialize=False)),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('age', models.IntegerField(validators=[django.core.validators.MinValueValidator(18), django.core.validators.MaxValueValidator(120)])),
                ('phone_number', models.BigIntegerField(unique=True, validators=[django.core.validators.MinValueValidator(1000000000), django.core.validators.MaxValueValidator(9999999999)])),
                ('monthly_salary', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('approved_limit', models.DecimalField(decimal_places=2, max_digits=12)),
                ('current_debt', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'customers',
                'indexes': [models.Index(fields=['customer_id'], name='customers_custome_b85ebb_idx'), models.Index(fields=['phone_number'], name='customers_phone_n_7d2329_idx')],
            },
        ),
        migrations.CreateModel(
            name='DataIngestionLog',
            fields=[
                ('log_id', models.AutoField(primary_key=True, serialize=False)),
                ('ingestion_type', models.CharField(choices=[('CUSTOMER', 'Customer Data'), ('LOAN', 'Loan Data')], max_length=20)),
                ('file_name', models.CharField(max_length=255)),
                ('status', models.CharField(choices=[('STARTED', 'Started'), ('COMPLETED', 'Completed'), ('FAILED', 'Failed')], default='STARTED', max_length=20)),
                ('total_records', models.IntegerField(default=0)),
                ('successful_records', models.IntegerField(default=0)),
                ('failed_records', models.IntegerField(default=0)),
                ('error_message', models.TextField(blank=True, null=True)),
                ('error_details', models.JSONField(blank=True, null=True)),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'data_ingestion_logs',
                'indexes': [models.Index(fields=['ingestion_type', 'status'], name='data_ingest_ingesti_95da59_idx'), models.Index(fields=['started_at'], name='data_ingest_started_39199b_idx')],
            },
        ),
        migrations.CreateModel(
            name='Loan',
            fields=[
                ('loan_id', models.AutoField(primary_key=True, serialize=False)),
                ('loan_amount', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('1000.00'))])),
                ('tenure', models.IntegerField(help_text='Loan tenure in months', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(600)])),
                ('interest_rate', models.DecimalField(decimal_places=2, help_text='Annual interest rate in percentage', max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0.01')), django.core.validators.MaxValueValidator(Decimal('50.00'))])),
                ('monthly_repayment', models.DecimalField(decimal_places=2, help_text='Monthly EMI amount', max_digits=12)),
                ('emis_paid_on_time', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='loans', to='loans.customer')),
            ],
            options={
                'db_table': 'loans',
            },
        ),
        migrations.CreateModel(
            name='LoanApplication',
            fields=[
                ('application_id', models.AutoField(primary_key=True, serialize=False)),
                ('requested_amount', models.DecimalField(decimal_places=2, max_digits=12)),
                ('requested_interest_rate', models.DecimalField(decimal_places=2, max_digits=5)),
                ('requested_tenure', models.IntegerField()),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('APPROVED', 'Approved'), ('REJECTED', 'Rejected')], default='PENDING', max_length=20)),
                ('approved_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('approved_interest_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('corrected_interest_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('monthly_installment', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('rejection_reason', models.CharField(blank=True, choices=[('LOW_CREDIT_SCORE', 'Credit score too low'), ('HIGH_EMI_RATIO', 'EMI exceeds 50% of monthly income'), ('INSUFFICIENT_INCOME', 'Insufficient monthly income'), ('OVER_APPROVED_LIMIT', 'Exceeds approved credit limit'), ('HIGH_INTEREST_REQUIRED', 'Interest rate too low for credit score')], max_length=50, null=True)),
                ('rejection_message', models.TextField(blank=True, null=True)),
                ('credit_score_at_application', models.IntegerField(blank=True, null=True)),
                ('applied_at', models.DateTimeField(auto_now_add=True)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='loan_applications', to='loans.customer')),
                ('loan', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='application', to='loans.loan')),
            ],
            options={
                'db_table': 'loan_applications',
            },
        ),
        migrations.CreateModel(
            name='CreditScore',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('past_loans_score', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('loan_count_score', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('current_year_activity_score', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('loan_volume_score', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('calculation_date', models.DateTimeField(auto_now_add=True)),
                ('is_current', models.BooleanField(default=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='credit_scores', to='loans.customer')),
            ],
            options={
                'db_table': 'credit_scores',
                'indexes': [models.Index(fields=['customer', 'is_current'], name='credit_scor_custome_cdb3f2_idx'), models.Index(fields=['calculation_date'], name='credit_scor_calcula_e76b29_idx')],
                'unique_together': {('customer', 'is_current')},
            },
        ),
        migrations.AddIndex(
            model_name='loan',
            index=models.Index(fields=['loan_id'], name='loans_loan_id_413fca_idx'),
        ),
        migrations.AddIndex(
            model_name='loan',
            index=models.Index(fields=['customer', 'start_date'], name='loans_custome_698208_idx'),
        ),
        migrations.AddIndex(
            model_name='loan',
            index=models.Index(fields=['start_date', 'end_date'], name='loans_start_d_5c9ae3_idx'),
        ),
        migrations.AddIndex(
            model_name='loanapplication',
            index=models.Index(fields=['customer', 'status'], name='loan_applic_custome_0c8ce8_idx'),
        ),
        migrations.AddIndex(
            model_name='loanapplication',
            index=models.Index(fields=['applied_at'], name='loan_applic_applied_99680b_idx'),
        ),
        migrations.AddIndex(
            model_name='loanapplication',
            index=models.Index(fields=['status', 'processed_at'], name='loan_applic_status_793c42_idx'),
        ),
    ]
